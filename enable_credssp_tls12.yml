---

# On Windows 2008 R2 and Windows 2012 hosts it may be necessary to update TLS to v1.2 as credssp used 1.2 by default
# See the following pages for explanation:
# https://docs.ansible.com/ansible/latest/user_guide/windows_winrm.html#id17
# https://docs.ansible.com/ansible/latest/user_guide/windows_winrm.html#winrm-tls12
# This playbook applies the hotfix and enables TLSv1.2
# You can run the following command from an Ansible control point (i.e Tower node) or any linux/mac to test the version:
# openssl s_client -connect <hostname>:5986

# on windows 2008 R2 SP1 vanilla, the following KB hotfix may need to be installed manually
#hotfixes_group_1:
#  - kb: KB947821
#    file: Windows6.1-KB947821-v34-x64.msu
#    url: https://download.microsoft.com/download/4/7/B/47B0AC80-4CC3-40B0-B68E-8A6148D20804/Windows6.1-KB947821-v34-x64.msu

- name: Enable credssp TLS v1.2
  hosts: all
  vars:
    ansible_port: 5985
    ansible_connection: winrm
    ansible_winrm_transport: basic
    ansible_winrm_server_cert_validation: ignore
    hotfix_download_location: "{{ ansible_env.TEMP }}"
    hotfixes_group_1:
      - kb: KB3080079
        file: Windows6.1-KB3080079-x64.msu
        url: https://download.microsoft.com/download/F/4/1/F4154AD2-2119-48B4-BF99-CC15F68E110D/Windows6.1-KB3080079-x64.msu

  tasks:
#    - name: install Windows ADK with DISM for Server 2008 R2
#      win_chocolatey:
#        name: windows-adk
#        version: 8.100.26866.0
#        state: present
#        install_args: /features OptionId.DeploymentTools
#      register: install_windows_adk
#
#    - name: ensure Windows ADK with DISM is installed
#      win_chocolatey:
#        name: windows-adk-deploy
#        state: present
#        version: 10.0.17134.0
#      register: install_windows_adk_deploy
#
#    - name: ensure PATH contains Windows ADK
#      win_path:
#        scope: machine
#        state: present
#        elements: "C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Deployment Tools\\amd64\\DISM"
#
#    - name: reboot
#      win_reboot:
#      when: install_windows_adk is changed or install_windows_adk_deploy is changed
#
#    - name: download hotfix group 1
#      win_get_url:
#        url: '{{ item.url }}'
#        dest: '{{ hotfix_download_location }}\{{ item.file }}'
#      loop: "{{ hotfixes_group_1 }}"
#
#    - name: install hotfix group 1
#      win_hotfix:
#        source: '{{ hotfix_download_location }}\{{ item.file }}'
#        state: present
#      register: hotfix_install_group_1
#      loop: "{{ hotfixes_group_1 }}"
#
#    - name: debug hotfix installation result
#      debug:
#        var: hotfix_install_group_1
#
#    - name: ensure hotfix file is removed (group 1)
#      win_file:
#        path: '{{ hotfix_download_location }}\{{ item.file }}'
#        state: absent
#      loop: "{{ hotfixes_group_1 }}"
#
#    - name: reboot if needed
#      win_reboot:
#      when: hotfix_install_group_1.reboot_required

    - name: enable TLSv1.2 support
      win_regedit:
        path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2\{{ item.type }}
        name: '{{ item.property }}'
        data: '{{ item.value }}'
        type: dword
        state: present
        register: enable_tls12
      loop:
        - type: Server
          property: Enabled
          value: 1
        - type: Server
          property: DisabledByDefault
          value: 0
        - type: Client
          property: Enabled
          value: 1
        - type: Client
          property: DisabledByDefault
          value: 0

    - name: reboot if TLS config was applied
      win_reboot:
      when: enable_tls12 is changed